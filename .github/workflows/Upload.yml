
name: Upload

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      machine:
        description: 'Compile machine'
        required: true
        default: "10900T"
        type: choice
        options:
        - "10900T"
        - "10850K"

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: configs/lean/lean_docker.config
  DIY_SH: scripts/lean.sh
  KMODS_IN_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  OPENWRTROOT: /home/gngpp/x86/_work/x86-64/x86-64/openwrt

jobs:
  Build:
    runs-on: [self-hosted, Linux, X64, "${{ inputs.machine }}"]
    
    steps:

    - name: Generate Firmware
      id: generate
      run: |
        cd configs/opkg
        sed -i "s/subtarget/$SUBTARGET/g" distfeeds*.conf
        sed -i "s/target\//$TARGET\//g" distfeeds*.conf
        sed -i "s/platform/$PLATFORM/g" distfeeds*.conf
        cd $OPENWRTROOT
        mkdir -p files/etc/uci-defaults/
        cp ../scripts/init-settings.sh files/etc/uci-defaults/99-init-settings
        mkdir -p files/etc/opkg
        cp ../configs/opkg/distfeeds-packages-server.conf files/etc/opkg/distfeeds.conf.server
        if "$KMODS_IN_FIRMWARE" = 'true'
        then
            mkdir -p files/www/snapshots
            cp -r bin/targets files/www/snapshots
            cp ../configs/opkg/distfeeds-18.06-local.conf files/etc/opkg/distfeeds.conf
        else
            cp ../configs/opkg/distfeeds-18.06-remote.conf files/etc/opkg/distfeeds.conf
        fi
        cp files/etc/opkg/distfeeds.conf.server files/etc/opkg/distfeeds.conf.mirror
        sed -i "s/http:\/\/192.168.123.100:2345\/snapshots/https:\/\/openwrt.cc\/snapshots\/$(date +"%Y-%m-%d")\/lean/g" files/etc/opkg/distfeeds.conf.mirror
        make package/install -j$(nproc) || make package/install -j1 V=s
        make target/install -j$(nproc) || make target/install -j1 V=s
        pushd bin/targets/x86/64
        kernelv=`cat openwrt-x86-64-generic.manifest | grep 'kernel - ' |  awk -F '[- ]' '{print $4}'`
        echo "kernel_version=$kernelv" >> $GITHUB_OUTPUT
        rm -rf openwrt-x86-64-generic-kernel.bin
        rm -rf openwrt-x86-64-generic-rootfs.tar.gz
        rm -rf openwrt-x86-64-generic-squashfs-rootfs.img.gz
        rm -rf openwrt-x86-64-generic-squashfs-combined-efi.vmdk
        rm -rf openwrt-x86-64-generic.manifest
        mv openwrt-x86-64-generic-squashfs-combined-efi.img.gz docker-x86-64-squashfs-efi.img.gz
        popd
        make checksum
        mv bin/targets/x86/64/sha256sums bin/targets/x86/64/docker-sha256sums
        echo "GENERATE_STATUS=success" >> $GITHUB_OUTPUT
        
    - name: Generate release tag
      id: tag
      run: |
          echo "RELEASE_TAG=$(date +"%Y.%m.%d")-lede" >> $GITHUB_OUTPUT
          echo "RELEASE_DATA=$(date +"%Y.%m.%d")" >> $GITHUB_OUTPUT
          touch release.txt
          echo "后台地址：10.0.1.1
                默认密码：password
                docker = 带docker" > release.txt
          echo "RELEASE_SUCCESS=success" >> $GITHUB_OUTPUT

    - name: Remove Images
      run: | 
        MAX_DISK_USAGE="10G"
        CURRENT=$(docker system df --format '{{.Size}}' | head -n1 | sed 's/B$//')
        if (( $(numfmt --from=iec $CURRENT) > $(numfmt --from=iec $MAX_DISK_USAGE) )); then
          docker rmi $(docker images -q) -f
        fi

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
          name: x86-64
          tag_name: x86-64
          files: /home/gngpp/x86/_work/x86-64/x86-64/openwrt/bin/targets/x86/64/*

          GITHUB_TOKEN: ${{ secrets.TOKEN }}
